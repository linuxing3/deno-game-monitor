// Copyright 2018-2020 Xing Wenju. 
// All rights reserved. MIT license.
// deno-lint-ignore-file
/*
|--------------------------------------------------------------------------
| Model: PurchaseInvoice
|--------------------------------------------------------------------------
|
| Model Class and Interface of purchaseInvoices
|
*/
import {
  DataTypes,
  Model
} from "https://deno.land/x/denodb/mod.ts";


export class PurchaseInvoice extends Model { 
  static table = "purchaseInvoices";
  static timestamps = true;
  
  static fields = {
    // fields list for ORM Maping
    id: { primaryKey: true, autoIncrement: true },
    title: DataTypes.STRING,
    series: DataTypes.STRING,
    supplier: DataTypes.STRING,
    supplierName: DataTypes.STRING,
    taxId: DataTypes.STRING,
    dueDate: DataTypes.STRING,
    isPaid: DataTypes.STRING,
    isReturnDebitNote: DataTypes.STRING,
    applyTaxWithholdingAmount: DataTypes.STRING,
    company: DataTypes.STRING,
    costCenter: DataTypes.STRING,
    date: DataTypes.STRING,
    postingTime: DataTypes.STRING,
    editPostingDateAndTime: DataTypes.STRING,
    amendedFrom: DataTypes.STRING,
    holdInvoice: DataTypes.STRING,
    releaseDate: DataTypes.STRING,
    reasonForPuttingOnHold: DataTypes.STRING,
    supplierInvoiceDetails: DataTypes.STRING,
    supplierInvoiceNo: DataTypes.STRING,
    supplierInvoiceDate: DataTypes.STRING,
    returns: DataTypes.STRING,
    returnAgainstPurchaseInvoice: DataTypes.STRING,
    addressAndContact: DataTypes.STRING,
    selectSupplierAddress: DataTypes.STRING,
    address: DataTypes.STRING,
    contactPerson: DataTypes.STRING,
    contact: DataTypes.STRING,
    mobileNo: DataTypes.STRING,
    contactEmail: DataTypes.STRING,
    selectShippingAddress: DataTypes.STRING,
    shippingAddress: DataTypes.STRING,
    currencyAndPriceList: DataTypes.STRING,
    currency: DataTypes.STRING,
    exchangeRate: DataTypes.STRING,
    priceList: DataTypes.STRING,
    priceListCurrency: DataTypes.STRING,
    priceListExchangeRate: DataTypes.STRING,
    ignorePricingRule: DataTypes.STRING,
    setAcceptedWarehouse: DataTypes.STRING,
    rejectedWarehouse: DataTypes.STRING,
    supplierWarehouse: DataTypes.STRING,
    updateStock: DataTypes.STRING,
    scanBarcode: DataTypes.STRING,
    items: DataTypes.STRING,
    rawMaterialsSupplied: DataTypes.STRING,
    suppliedItems: DataTypes.STRING,
    totalQuantity: DataTypes.STRING,
    totalCompanyCurrency: DataTypes.STRING,
    netTotalCompanyCurrency: DataTypes.STRING,
    total: DataTypes.STRING,
    netTotal: DataTypes.STRING,
    totalNetWeight: DataTypes.STRING,
    taxCategory: DataTypes.STRING,
    shippingRule: DataTypes.STRING,
    purchaseTaxesAndChargesTemplate: DataTypes.STRING,
    purchaseTaxesAndCharges: DataTypes.STRING,
    taxBreakup: DataTypes.STRING,
    taxesAndChargesCalculation: DataTypes.STRING,
    taxesAndChargesAddedCompanyCurrency: DataTypes.STRING,
    taxesAndChargesDeductedCompanyCurrency: DataTypes.STRING,
    totalTaxesAndChargesCompanyCurrency: DataTypes.STRING,
    taxesAndChargesAdded: DataTypes.STRING,
    taxesAndChargesDeducted: DataTypes.STRING,
    totalTaxesAndCharges: DataTypes.STRING,
    additionalDiscount: DataTypes.STRING,
    applyAdditionalDiscountOn: DataTypes.STRING,
    additionalDiscountAmountCompanyCurrency: DataTypes.STRING,
    additionalDiscountPercentage: DataTypes.STRING,
    additionalDiscountAmount: DataTypes.STRING,
    grandTotalCompanyCurrency: DataTypes.STRING,
    roundingAdjustmentCompanyCurrency: DataTypes.STRING,
    roundedTotalCompanyCurrency: DataTypes.STRING,
    inWordsCompanyCurrency: DataTypes.STRING,
    grandTotal: DataTypes.STRING,
    roundingAdjustment: DataTypes.STRING,
    roundedTotal: DataTypes.STRING,
    inWords: DataTypes.STRING,
    totalAdvance: DataTypes.STRING,
    outstandingAmount: DataTypes.STRING,
    disableRoundedTotal: DataTypes.STRING,
    payments: DataTypes.STRING,
    modeOfPayment: DataTypes.STRING,
    cashBankAccount: DataTypes.STRING,
    paidAmount: DataTypes.STRING,
    paidAmountCompanyCurrency: DataTypes.STRING,
    writeOff: DataTypes.STRING,
    writeOffAmount: DataTypes.STRING,
    writeOffAmountCompanyCurrency: DataTypes.STRING,
    writeOffAccount: DataTypes.STRING,
    writeOffCostCenter: DataTypes.STRING,
    advancePayments: DataTypes.STRING,
    setAdvancesAndAllocateFifo: DataTypes.STRING,
    getAdvancesPaid: DataTypes.STRING,
    advances: DataTypes.STRING,
    paymentTerms: DataTypes.STRING,
    paymentTermsTemplate: DataTypes.STRING,
    paymentSchedule: DataTypes.STRING,
    termsAndConditions: DataTypes.STRING,
    terms: DataTypes.STRING,
    termsAndConditions1: DataTypes.STRING,
    printingSettings: DataTypes.STRING,
    letterHead: DataTypes.STRING,
    groupSameItems: DataTypes.STRING,
    printHeading: DataTypes.STRING,
    printLanguage: DataTypes.STRING,
    moreInformation: DataTypes.STRING,
    creditTo: DataTypes.STRING,
    partyAccountCurrency: DataTypes.STRING,
    isOpening: DataTypes.STRING,
    againstExpenseAccount: DataTypes.STRING,
    status: DataTypes.STRING,
    interCompanyInvoiceReference: DataTypes.STRING,
    remarks: DataTypes.STRING,
    subscriptionSection: DataTypes.STRING,
    fromDate: DataTypes.STRING,
    toDate: DataTypes.STRING,
    autoRepeat: DataTypes.STRING,
    updateAutoRepeatReference: DataTypes.STRING,
    
  };

}
